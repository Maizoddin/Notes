API REQUEST CANCELLATION ::
const controller = new AbortController()
send controller.signal in api 
use controller.abort()   to cancel the request.


===================================================================
Example :

import React from "react";
import { useRef } from "react";
import { useState } from "react";

const Test = () => {
  const abortControllerRef = useRef(null);
  const [query, setQuery] = useState("");
  const getSuggestions = async (query) => {
    if (abortControllerRef.current) {
      abortControllerRef.current.abort();
    }
    abortControllerRef.current = new AbortController();
    const signal = abortControllerRef.current.signal;
    try {
      const response = await fetch(
        `https://dummyjson.com/users/search?q=${query}&limit=5`,
        {
          signal: signal,
        }
      );
      if (!response.ok) {
        throw new Error("Something went wrong");
      }
      const data = await response.json();
      console.log("Results :", data);
    } catch (error) {
      if (error.name === "AbortError") {
        console.log("Request Cancelled");
      } else {
        console.log(error.message);
      }
    }
  };
  const handleInputChange = (event) => {
    const newQuery = event.target.value;
    setQuery(newQuery);
    getSuggestions(newQuery);
  };
  return (
    <div>
      <h1>Testing...</h1>
      <input
        type="text"
        value={query}
        onChange={handleInputChange}
        className="border border-black"
      />
    </div>
  );
};

export default Test;
